.grid {
  @if $grid-use-letter-spacing-hack {
    letter-spacing: -0.32em;
  } @else {
    font-size:0;
  }
  margin-left: -$grid-gutters;
}

.grid--float {
  letter-spacing: 0;
}

.grid--center {
  text-align: center;
  .grid__col {
    text-align: left;
  }
}

.grid--center-all {
  text-align: center;
}

.grid--reverse {
  direction: rtl;
  .grid__col {
    direction: ltr;
  }
}

.grid--spaced {
  .grid__col {
    margin-bottom: $grid-gutters;
  }
  &.grid--tight {
    .grid__col {
      margin-bottom: $grid-gutters/2;
    }
  }
}

.grid--align-mid {
  .grid__col {
    vertical-align: middle;
  }
}

.grid--stagger-align {
  .grid__col:nth-of-type(1n) {
    text-align: right;
  }
  .grid__col:nth-of-type(2n) {
    text-align: left;
  }
}

.grid--tight {
  margin-left: -1em;
  .grid__col {
    padding-left: 1em;
  }
}

.grid--gutterless {
  margin-left: 0;
  .grid__col {
    padding-left: 0;
  }
}

.grid--pixelgutter {
  margin-left: 1px;
  .grid__col {
    padding-left: 1px;
    margin-bottom: 1px;
  }
}

.grid--flex {
  flex-wrap: wrap;
  display: flex;
  &.grid--center {
    justify-content: center;
  }
}

.grid__col {
  display: inline-block;
  width: 100%;
  vertical-align: top;
  @if $grid-use-letter-spacing-hack {
    letter-spacing: normal;
    word-spacing: normal;
  } @else {
    font-size: initial;
  }
  padding-left: $grid-gutters;
  @each $bp, $size in $grid-bp {
    @include mq($from: $size) {
      @for $col from 1 through $grid-cols {

        $selector: #{$bp}-#{$col};
        $width: percentage($col / $grid-cols);

        @if $responsive {
          &.#{$selector} {
            width: $width;
            width: calc(100% / #{$grid-cols / $col});
          }
        }

        @else {
          @if ($size == $grid-bp-fixed) {
            &.#{$selector} {
              width: $width;
            }
          }
        }
      }
    }
  }
  .grid--float & {
    float: left;
    display: block;
  }
}

.grid__col--flex {
  display: flex;
}
